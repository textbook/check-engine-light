---
name: Node.js CI

on:
  push:
    branches: [ main ]
    tags: [ "v*" ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tarball: ${{ steps.pack.outputs.tarball }}
    steps:
      - uses: textbook/take-action@nodejs
        with:
          node-version: "22"
      - run: npm run lint
      - run: npm run test:cover
      - run: npm run e2e
      - run: npm run build
      - run: |
          echo "tarball=$(npm --workspace check-engine-light pack)" >> "$GITHUB_OUTPUT"
        id: pack
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: ${{ steps.pack.outputs.tarball }}
          if-no-files-found: error

  test:
    needs: [ build ]
    strategy:
      fail-fast: false
      matrix:
        node: [ "20.11", "20", "21.2", "22", "24" ]
        platform: [ ubuntu ]
        include:
          - node: "22"
            platform: "windows"
          - node: "22"
            platform: "macos"
    runs-on: ${{ matrix.platform }}-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - uses: actions/download-artifact@v4
        with:
          name: package
      - shell: bash
        run: |
          npm init --yes
          npm pkg set 'type=module'
          npm pkg set 'engines.node=^20.11 || >=21.2'
          npm install ${{ needs.build.outputs.tarball }}
          npx check-engine-light .
        env:
          DEBUG: cel:*

  deploy-npm:
    needs: [ build, test ]
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: npm
      url: ${{ vars.URL }}
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: "22"
      - uses: actions/download-artifact@v4
        with:
          name: package
      - run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_AUTH_TOKEN}"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - run: npm publish --provenance '${{ needs.build.outputs.tarball }}'

  deploy-gh:
    needs: [ build, test ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment:
      name: github
      url: ${{ vars.URL }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: package
      - run: |
          gh release create \
            '${{ github.ref_name }}' \
            --title '${{ github.ref_name }}' \
            '${{ needs.build.outputs.tarball }}#npm package'
        env:
          GH_TOKEN: ${{ github.token }}
